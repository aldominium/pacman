//
//  AOLabyrinthNode.m
//  Pacman
//
//  Created by Aldo Olivares Dominguez on 30/08/14.
//  Copyright (c) 2014 Aldominium. All rights reserved.
//

#import "AOLabyrinthNode.h"
#import "AOUtil.h"

@implementation AOLabyrinthNode

int laberinto[25][25] ={
    {WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL},
    {WALL,RD,RL,RL,RL,RL,RL,RL,RL,RL,RDL,RL,RDL,RL,RDL,RL,RL,RL,RL,RL,RL,RL,RL,DL,WALL},//1
    {WALL,UD,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,UD,WALL,UD,WALL,UD,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,UD,WALL},//5
    {WALL,UD,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,UD,WALL,UD,WALL,UD,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,UD,WALL},//5
    {WALL,UD,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,UD,WALL,UD,WALL,UD,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,UD,WALL},//5
    {WALL,UD,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,UD,WALL,UD,WALL,UD,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,UD,WALL},//5
    {WALL,URD,RL,RL,RL,RL,RL,RL,RL,RL,URDL,RL,LUR,RL,URDL,RL,RL,RL,RL,RL,RL,RL,RL,DLU,WALL},//6
    {WALL,UD,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,UD,WALL,WALL,WALL,UD,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,UD,WALL},//11
    {WALL,UD,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,UD,WALL,WALL,WALL,UD,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,UD,WALL},//11
    {WALL,UD,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,UD,WALL,WALL,WALL,UD,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,UD,WALL},//11
    {WALL,UD,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,UD,WALL,WALL,WALL,UD,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,UD,WALL},//11
    {WALL,UD,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,UD,WALL,WALL,WALL,UD,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,UD,WALL},//11
    {WALL,URD,RL,RL,RL,RL,RL,RDL,RL,RDL,LUR,RL,RL,RL,LUR,RDL,RL,RDL,RL,RL,RL,RL,RL,DLU,WALL},//12
    {WALL,UD,WALL,WALL,WALL,WALL,WALL,UD,WALL,UD,WALL,WALL,WALL,WALL,WALL,UD,WALL,UD,WALL,WALL,WALL,WALL,WALL,UD,WALL},//16
    {WALL,UD,WALL,WALL,WALL,WALL,WALL,UD,WALL,UD,WALL,WALL,WALL,WALL,WALL,UD,WALL,UD,WALL,WALL,WALL,WALL,WALL,UD,WALL},//16
    {WALL,UD,WALL,WALL,WALL,WALL,WALL,UD,WALL,UD,WALL,WALL,WALL,WALL,WALL,UD,WALL,UD,WALL,WALL,WALL,WALL,WALL,UD,WALL},//16
    {WALL,UD,WALL,WALL,WALL,WALL,WALL,UD,WALL,UR,RL,RL,RL,RL,RL,LU,WALL,UD,WALL,WALL,WALL,WALL,WALL,UD,WALL},//16
    {WALL,UD,WALL,WALL,WALL,WALL,WALL,UD,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,UD,WALL,WALL,WALL,WALL,WALL,UD,WALL},//17
    {WALL,UR,RL,RL,RL,RDL,RL,URDL,RL,RL,RL,RDL,RL,RDL,RL,RL,RDL,LUR,RL,RDL,RL,RL,RL,LU,WALL},//18
    {WALL,WALL,WALL,WALL,WALL,UD,WALL,UD,WALL,WALL,WALL,UD,WALL,UD,WALL,WALL,UD,WALL,WALL,UD,WALL,WALL,WALL,WALL,WALL},//19
    {WALL,WALL,WALL,WALL,WALL,UD,WALL,UD,WALL,WALL,WALL,UD,WALL,UD,WALL,WALL,UD,WALL,WALL,UD,WALL,WALL,WALL,WALL,WALL},//20
    {WALL,RD,RL,RL,RL,LU,WALL,UR,RL,RL,RL,DLU,WALL,UD,WALL,WALL,UR,RL,RL,LUR,RL,RL,RL,DL,WALL},//21
    {WALL,UD,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,UD,WALL,UD,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,UD,WALL},//22
    {WALL,UR,RL,RL,RL,RL,RL,RL,RL,RL,RL,LU,WALL,UR,RL,RL,RL,RL,RL,RL,RL,RL,RL,LU,WALL},//23
    {WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL,WALL},//24
};

+(instancetype)createLabyrinthinScene:(SKScene*)scene{
    
    AOLabyrinthNode *labyrinth = [self node];
    
    /* Setup your scene here */
    
    for (int i = 0; i<25; i++)
        for (int j = 0; j < 25; j++) {
            if (laberinto[j][i] == 1 || laberinto[j][i] == WALL) {
                SKSpriteNode *greenNode = [SKSpriteNode spriteNodeWithImageNamed:@"brick"];
                greenNode.anchorPoint = CGPointMake(0, 0);
                greenNode.position = CGPointMake(i*13 ,(312 - (j*13)));
                [labyrinth addChild:greenNode];
            }
            
        }

    
    return labyrinth;
   

}

-(NSInteger)labyrinthAtRow:(NSInteger)row column:(NSInteger)column{
    return laberinto[row][column];

}


@end
